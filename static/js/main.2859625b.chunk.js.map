{"version":3,"sources":["styles/GlobalStyles.js","styles/theme.js","constants/routes.js","components/Container.jsx","components/Form/Input.jsx","components/Form/LinkButton.jsx","components/NameForm.jsx","components/Main.jsx","utils/getGreeting.js","utils/greetings.js","components/Greeting.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["GlobalStyles","createGlobalStyle","_templateObject","_ref","theme","typography","base","fontFamily","_ref2","title","baseFonts","palette","primary","lighter","light","main","dark","darker","secondary","tertiary","join","concat","GREETING","Container","styled","div","Container_templateObject","Input","input","Input_templateObject","_ref3","LinkButton","Link","LinkButton_templateObject","disabled","_ref4","NameForm","str","className","_useState","useState","_useState2","Object","slicedToArray","name","setName","react_default","a","createElement","components_Container","Form_Input","type","placeholder","value","onChange","e","target","Form_LinkButton","to","routes","trim","length","NameForm_templateObject","Main","components_NameForm","Main_templateObject","getGreeting","normalizedName","toLowerCase","includes","Greeting","location","useLocation","queryString","parse","search","Greeting_templateObject","WebFont","load","google","families","App","styled_components_browser_esm","Fragment","styles_GlobalStyles","react_router_dom","basename","react_router","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2859625b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  html {\n    height: auto;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: ${({ theme }) => theme.typography.base.fontFamily};\n    width: 100%;\n    min-height: 100%;\n\n\n    height: 100vh;\n    text-align: center;\n    background: linear-gradient(#ffe1d9, #ffbb89);\n    border-radius: 0;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  h1, h2 {\n    font-family: ${({ theme }) => theme.typography.title.fontFamily};\n  }\n`;\n\nexport default GlobalStyles;\n","const baseFonts = [\n  'Indie Flower',\n  'Open Sans',\n  'Roboto',\n  'Helvetica Neue',\n  'Arial',\n  'sans-serif',\n];\n\nexport default {\n  palette: {\n    primary: {\n      lighter: '#FFF1EB',\n      light: '#FFD6C7',\n      main: '#FDB01F',\n      dark: '#b15a3a',\n      darker: '#A76D00',\n    },\n    secondary: {\n      lighter: '#7E6ACC',\n      light: '#5E45B9',\n      main: '#4428AE',\n      dark: '#2D1392',\n      darker: '#220C73',\n    },\n    tertiary: {\n      lighter: '#57C0B8',\n      light: '#31A89F',\n      main: '#139B92',\n      dark: '#018279',\n      darker: '#00675F',\n    },\n  },\n  typography: {\n    base: {\n      fontFamily: baseFonts.join(','),\n    },\n    title: {\n      fontFamily: ['Vollkorn', ...baseFonts].join(','),\n    },\n  },\n};\n","export const ROOT = '';\nexport const GREETING = `${ROOT}/greeting`;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  overflow: hidden;\n  max-width: 600px;\n  border-radius: 2rem;\n  background: linear-gradient(\n    45deg,\n    rgba(255, 255, 255, 0.3),\n    rgba(255, 255, 255, 0.15)\n  );\n  padding: 2rem;\n  color: ${({ theme }) => theme.palette.primary.dark};\n\n  & > p {\n    text-align: left;\n  }\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  background-color: transparent;\n  border: none;\n  outline: none;\n  padding: 0.5rem 0;\n  border-bottom: 1px solid ${({ theme }) => theme.palette.primary.dark};\n  font-size: 1rem;\n  font-family: ${({ theme }) => theme.typography.base.fontFamily};}\n\n  &,\n  &::placeholder {\n    color: ${({ theme }) => theme.palette.primary.dark};\n  }\n`;\n\nexport default Input;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst LinkButton = styled(Link)`\n  padding: 0.5rem;\n  background-color: white;\n  display: block;\n  margin-top: 1rem;\n  border-radius: 3rem;\n  text-decoration: none;\n  color: ${({ theme }) => theme.palette.primary.dark};\n  text-align: center;\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n  pointer-events: ${({ disabled }) => (disabled ? 'none' : 'initial')};\n  user-select: none;\n\n  &:hover,\n  &:focus,\n  &:active {\n    box-shadow: 0 3px 2px rgba(0, 0, 0, 0.15) inset;\n    background-color: ${({ theme }) => theme.palette.primary.lighter};\n  }\n`;\n\nexport default LinkButton;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport Container from './Container';\nimport Input from './Form/Input';\nimport LinkButton from './Form/LinkButton';\n\nimport * as routes from '../constants/routes';\n\nconst NameFormStructure = ({ className }) => {\n  const [name, setName] = useState('');\n\n  const handleChange = e => setName(e.target.value);\n\n  const isValid = str => !(str && str.length > 0);\n\n  return (\n    <Container className={className}>\n      <Input\n        type=\"text\"\n        placeholder=\"Nimeni on...\"\n        value={name}\n        onChange={handleChange}\n      />\n\n      <LinkButton\n        to={`${routes.GREETING}?name=${name.trim()}`}\n        disabled={isValid(name)}\n      >\n        Jatka\n      </LinkButton>\n    </Container>\n  );\n};\n\nconst NameForm = styled(NameFormStructure)``;\n\nNameFormStructure.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default NameForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport NameForm from './NameForm';\n\nconst MainStructure = ({ className }) => {\n  return (\n    <div className={className}>\n      <NameForm />\n    </div>\n  );\n};\n\nconst Main = styled(MainStructure)``;\n\nMainStructure.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Main;\n","import * as greetings from './greetings';\n\nconst getGreeting = name => {\n  const normalizedName = name.trim().toLowerCase();\n\n  if (['jasmiina', 'jassu', 'jaz'].includes(normalizedName)) {\n    return greetings.jasmiinaGreeting;\n  }\n\n  if (normalizedName === 'kaisa') {\n    return greetings.kaisaGreeting;\n  }\n\n  if (normalizedName === 'niko') {\n    return greetings.nikoGreeting;\n  }\n\n  if (normalizedName === 'heikki') {\n    return greetings.heikkiGreeting;\n  }\n\n  if (normalizedName === 'jarka') {\n    return greetings.jarkaGreeting;\n  }\n\n  if (\n    [\n      'jarka',\n      'kaisa',\n      'nina',\n      'daniel',\n      'aleksi',\n      'anna',\n      'atte',\n      'emmiina',\n      'jeremias',\n      'jere',\n      'johanna',\n      'saara',\n    ].includes(normalizedName)\n  ) {\n    return greetings.donutGreeting;\n  }\n\n  if (\n    [\n      'aikku',\n      'aino-inkeri',\n      'ilona',\n      'anna-ilona',\n      'dave',\n      'david',\n      'eero',\n      'eerika',\n      'emma',\n      'hanna',\n      'joonas',\n      'kirsi',\n      'konstantin',\n      'kosu',\n      'maija',\n      'meri',\n      'mc',\n      'mia-carita',\n      'milka',\n      'onni',\n      'julia',\n    ].includes(normalizedName)\n  ) {\n    return greetings.karvaGreeting;\n  }\n\n  if (normalizedName === 'sammakko') {\n    return greetings.sammakkoGreeting;\n  }\n\n  return greetings.baseGreeting;\n};\n\nexport default getGreeting;\n","/* eslint max-len: 0 */\nexport const baseGreeting = 'Olet hyvä tyyppi. Hyvää ystävänpäivää!';\n\nexport const jasmiinaGreeting =\n  'Olet yksinkertaisesti paras! ❤ Elämä kanssasi on opettanut minulle mitä rakkaus todella on. Päivä päivältä tajuan yhä vahvemmin, miten tärkeä olet minulle ja miten kovasti haluan pitää sinusta kiinni. En voi kuvitella elämää ilman sinua. Kiitos kaikesta rakkaudesta, kärsivällisyydestä ja unohtumattomista hetkistä tähän asti - odotan innolla lisää! Hyvää ystävänpäivää!';\n\nexport const jarkaGreeting = 'Olet kana-aterian arvoinen ystävä.';\n\nexport const nikoGreeting =\n  'Kiitos ystävyydestäsi ja lämmin ystävänpäivän toivotus sekä sinulle että koirallesi T: 7 Wonders mestaruuttasi ihaileva ystäväsi.';\n\nexport const heikkiGreeting = 'Ystävyytesi on toimivampi kuin Windows.';\n\nexport const kaisaGreeting = 'Osta Coup Rebellion!';\n\nexport const donutGreeting =\n  'On kiva olla kaverisi, oli meillä sitten donitseja tai ei. Hyvää ystävänpäivää!';\n\nexport const sammakkoGreeting =\n  'Tykkään sinusta ainakin keskiviikkoisin. Hyvää ystävänpäivää!';\n\nexport const karvaGreeting = 'Karvainen sushikaverini, hyvää ystävänpäivää!';\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string';\nimport { useLocation } from 'react-router-dom';\n\nimport Container from './Container';\nimport LinkButton from './Form/LinkButton';\n\nimport * as routes from '../constants/routes';\nimport getGreeting from '../utils/getGreeting';\n\nconst GreetingStructure = ({ className }) => {\n  const location = useLocation();\n\n  const { name } = queryString.parse(location.search);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <Container className={className}>\n        <h1>Moi {name}!</h1>\n        <p>{getGreeting(name)}</p>\n        <LinkButton to={routes.ROOT}>Takaisin</LinkButton>\n      </Container>\n    </div>\n  );\n};\n\nconst Greeting = styled(GreetingStructure)`\n  padding: 1rem;\n`;\n\nGreetingStructure.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Greeting;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport WebFont from 'webfontloader';\n\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyles from './styles/GlobalStyles';\nimport theme from './styles/theme';\nimport * as routes from './constants/routes';\n\n/* Don't fear the wrappers! Start editing your home page in the Main component. */\nimport Main from './components/Main';\nimport Greeting from './components/Greeting';\n\nWebFont.load({\n  google: {\n    families: ['Indie Flower:400', 'Open Sans:300,400,600,800'],\n  },\n});\n\nconst App = function AppContent() {\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <GlobalStyles />\n\n        <Router basename=\"ystavanpaiva\">\n          <Switch>\n            <Route path={routes.GREETING} component={Greeting} />\n            <Route exact path={routes.ROOT} component={Main} />\n          </Switch>\n        </Router>\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}